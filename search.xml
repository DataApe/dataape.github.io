<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[Python爬虫之Scrapy框架安装配置]]></title>
      <url>%2F2017%2F03%2F10%2FPython%E7%88%AC%E8%99%AB%E4%B9%8BScrapy%E6%A1%86%E6%9E%B6%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%2F</url>
      <content type="text"><![CDATA[基于window平台安装Scrapy之前确保已经安装好下列程序: 1. 安装Python 安装过程见→ python初级教程：入门详解 在命令行中输入 python –version，如果没有提示错误，则安装成功。 2. 安装pywin32 在windows下，必须安装pywin32，安装地址： http://sourceforge.net/projects/pywin32/ http://www.softpedia.com/get/Programming/Other-Programming-Files/PyWin32.shtml#download 下载直接双击安装，安装完毕之后在python命令行下输入import win32com,如果没有提示错误，则证明安装成功! 3. 安装pip pip是用来安装其他必要包的工具，首先下载get-pip.py 下载好之后，选中该文件夹所在路径，执行命令python get-pip.py 执行命令后便会安装好pip，同时，它帮你安装了setuptools 安装完了之后在命令行执行pip --version 安装完后若提醒版本低，可进行更新python -m pip install --update pip pip is already installed if you’re using Python 2 &gt;=2.7.9 or Python 3 &gt;=3.4 4. 安装pyOPENSSL 在Windows下，是没有预装pyOPENSSL的，而在Linux下是已经安装好的。 安装地址：https://launchpad.net/pyopenssl (下载pyOpenSSL-0.11.winxp32-py2.7) 如果出现了Python Version 2.7 required which was not found in the registry错误！ 解决方法：新建一个register.py 文件，把以下代码贴进去，保存 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849# script to register Python 2.0 or later for use with win32all# and other extensions that require Python registry settings## written by Joakim Loew for Secret Labs AB / PythonWare## source:# http://www.pythonware.com/products/works/articles/regpy20.htm# import sys from _winreg import * # tweak as necessaryversion = sys.version[:3]installpath = sys.prefix regpath = "SOFTWARE\\Python\\Pythoncore\\%s\\" % (version)installkey = "InstallPath"pythonkey = "PythonPath"pythonpath = "%s;%s\\Lib\\;%s\\DLLs\\" % ( installpath, installpath, installpath) def RegisterPy(): try: reg = OpenKey(HKEY_CURRENT_USER, regpath) except EnvironmentError as e: try: reg = CreateKey(HKEY_CURRENT_USER, regpath) SetValue(reg, installkey, REG_SZ, installpath) SetValue(reg, pythonkey, REG_SZ, pythonpath) CloseKey(reg) except: print "*** Unable to register!" return print "--- Python", version, "is now registered!" return if (QueryValue(reg, installkey) == installpath and QueryValue(reg, pythonkey) == pythonpath): CloseKey(reg) print "=== Python", version, "is already registered!" return CloseKey(reg) print "*** Unable to register!" print "*** You probably have another Python installation!" if __name__ == "__main__": RegisterPy() 在cmd 中运行python脚本 双击安装 pyOpenSSL-0.11.winxp32-py2.7 5.安装 lxml第一种办法： lxml的详细介绍 link ，是一种使用 Python 编写的库，可以迅速、灵活地处理 XML 直接执行如下命令pip install lxml就可完成安装 如果提示 Microsoft Visual C++库没安装，则 link 下载支持的库。 可能报错： 第二种办法：步骤1：安装wheel，cmd命令行运行：pip install wheel步骤2：在这里http://www.lfd.uci.edu/~gohlke/pythonlibs/#lxml下载对应的.whl文件Ctrl + F，输入lxml，找到下面这段，cp后面是Python的版本号，27表示2.7。 lxml‑3.6.4‑cp27‑cp27m‑win32.whllxml‑3.6.4‑cp27‑cp27m‑win_amd64.whllxml‑3.6.4‑cp34‑cp34m‑win32.whllxml‑3.6.4‑cp34‑cp34m‑win_amd64.whllxml‑3.6.4‑cp35‑cp35m‑win32.whllxml‑3.6.4‑cp35‑cp35m‑win_amd64.whllxml‑3.6.4‑cp36‑cp36m‑win32.whllxml‑3.6.4‑cp36‑cp36m‑win_amd64.whl 步骤3：进入.whl所在的文件夹，执行命令pip install 带后缀的完整文件名即可完成安装pip安装报错：is not a supported wheel on this platform解决方法：在shell中输入import pip; print(pip.pep425tags.get_supported())可以获取到pip支持的文件名还有版本12345678import pip; print(pip.pep425tags.get_supported())[('cp27', 'none', 'win_amd64'), ('cp27', 'none', 'any'), ('cp2', 'none', 'any'), ('cp26', 'none', 'any'), ('cp25', 'none', 'any'), ('cp24', 'none', 'any'), ('cp23', 'none', 'any'), ('cp22', 'none', 'any'), ('cp21', 'none', 'any'), ('cp20', 'none', 'any'), ('py27', 'none', 'any'), ('py2', 'none', 'any'), ('py26', 'none', 'any'), ('py25', 'none', 'any'), ('py24', 'none', 'any'), ('py23', 'none', 'any'), ('py22', 'none', 'any'), ('py21', 'none', 'any'), ('py20', 'none', 'any')] 可以发现上面下载的文件名格式是不支持的，修改为：lxml-3.7.3-cp27-none-win_amd64.whl即可成功安装。 6.安装Scrapy 最后就是激动人心的时刻啦，上面的铺垫做好了，我们终于可以享受到胜利的果实啦！ 执行如下命令pip install Scrapy pip 会另外下载其他依赖的包，这些就不要我们手动安装啦，等待一会，大功告成！ 验证安装，输入 Scrapy 7.创建项目 scrapy startproject phone 发生问题： 问题原因：twist版本问题，twist版本高于需要的 输入pip freeze查看twist版本，用pip install twisted==13.1.0 替代更高的版本 Scrapy入门教程Scrapy 1.0 中文文档这是一本步骤详细的说明书。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[python初级教程：入门详解]]></title>
      <url>%2F2017%2F03%2F09%2Fpython%E5%88%9D%E7%BA%A7%E6%95%99%E7%A8%8B%EF%BC%9A%E5%85%A5%E9%97%A8%E8%AF%A6%E8%A7%A3%2F</url>
      <content type="text"><![CDATA[文章转载，详情请见 → python初级教程 本文是针对Python的初学者，从无到有的介绍Python语言如何入门，主要包括了：Python的简介，如何下载Python，如何安装Python，如何使用终端、Shell，IDE等各种开发环境进行Python开发，Python中的语法和基本知识、概念和逻辑，以及继续深入学习Python的方法，另外还整理一些值得参考的资料。 安装python1. Python官网不是太稳定，对于国内开发者来说，时不时会出现无法访问的情况。可以选择国内的镜像进行下载。 官网上的下载地址 国内的镜像 http://www.python.org/ftp/python/http://python.org/getit/releases/ http://mirrors.sohu.com/python/ 2. Python有2.x版本和3.x版本的区别。对于初学者，推荐先用Python 2.x版本的。 总结Python2(Python 2.x版本）和Python3（Python 3.x版本）之间的区别 如何在Windows系统中安装Python 如何选用Python的开发环境 针对初学者，建议使用windows的cmd下，去运行python脚本。目的很明确：很多东西的学习，其本质上，都是需要一个循序渐进的过程的，学习Python语言同样如此。在没有学会走路，即如何搞懂Windows的cmd下运行Python脚本，就想学会跑了，即直接利用Python的IDE，包括shell和第三方开发环境，结果就是，很多东西，还是不明白到底是为什么，理解的不透彻。而当Python的基本知识，基本开发流程熟悉了之后，再建议你去使用第三方的Python的IDE。 先：Windows的cmd + Notepad++再：选用某个IDE，比如PyScripter，Ulipad，Eclipse+PyDev等。 问题 在window的cmd中运行python结果却调用了文本编辑器去打开了，而不是去调用Python解析器去运行python文件 解决办法：修改后缀为.py文件的打开方式，设置为python 学习资料 Learn Python the hard way (笨办法学习PYTHON)很多文章介绍到的python入门经典教程&gt;&gt;英文版 &gt;&gt;中文版 Python 正则表达式操作指南 中文版]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[分类和预测]]></title>
      <url>%2F2017%2F03%2F03%2F%E5%88%86%E7%B1%BB%E5%92%8C%E9%A2%84%E6%B5%8B%2F</url>
      <content type="text"><![CDATA[分类：预测类对象的分类标号，根据训练数据集和类标号属性，构建模型来分类现有数据，并用来分类新数据。银行需要弄清楚那些贷款申请者是安全的，哪些是有风险的。预测：建立连续函数值模型，比如预测空缺值，或者预测顾客在某项活动中的花费。银行需要预测贷给某个顾客多少钱是安全的，预测一个连续值函数或有序值，常用方法是回归分析。 典型应用：欺诈检测 市场定位 医疗诊断 准备分类和预测的数据数据预处理数据清理通过填写空缺值，平滑噪声数据，识别删除孤立点，并解决不一致来清理数据。 空缺值 噪声数据(数据平滑技术) 1. 分箱 2. 聚类 3. 回归 - 忽略元组- 人工填写空缺值- 使用固定值- 使用属性平均值- 使用最有可能值 - 箱的深度：表示不同的箱里有相同个数的数据- 箱的宽度：每个箱值的取值区间是个常数- 平滑的办法：① 按箱平均值平滑② 按箱中值平滑③ 按箱边界值平滑 - 每个簇中的数据用其中心值代替- 忽略孤立点- 先通过聚类等办法找出孤立点。- 人工再审查这些孤立点 - 通过构造函数来符合数据变化的趋势，这样可以用一个变量预测另一个变量。① 线性回归② 多线性回归 数据清洗 格式标准化 异常数据清除 错误纠正 重复数据清除 数据变换 平滑 聚集 数据概化 规范化 属性构造 数据立方体聚集 最小 最大规范化 有给定的属性构造和添加新的属性，以帮助提高精度和对高纬度数据结构的理解 数据归约 数据聚集 维归约 数据压缩 数值归约 - 删除不相关属性属性子集选择 - 小波变换- 主要成分分析 - 回归和对数线性模型线性回归对数线性模型- 直方图等宽等深V-最优maxDiff 相关分析 在分类和回归之前进行，它试图识别与分类和回归过程显著相关的属性。 属性子集选择通过删除不相关或冗余的属性减少数据量。属性子集选择的目标是找出最小属性集，使得数据类的概率分布尽可能地接近使用所有属性得到的原分布。 向前选择 向后删除 决策树归纳 初始属性集：{A1，A2，A3，A4，A5，A6}初始化归约集：{ }=&gt; {A1}=&gt; {A1，A4}=&gt; 归约后的属性集：{A1，A4，A6} 初始属性集：{A1，A2，A3，A4，A5，A6}=&gt; {A1，A3，A4，A5，A6} =&gt; {A1，A4，A5，A6}=&gt; 归约后的属性集：{A1，A4，A6} 初始属性集：{A1，A2，A3，A4，A5，A6}当决策树归纳用于属性子集选择时，由给定的数据构造决策树。不出现在树中的所有属性假定是不相关的。出现在树中的属性形成归约后的属性子集。 这些方法的结束条件可以不同。该过程可以使用一个度量阈值来决定何时停止属性选择过程。 分类办法决策树 决策树构建，使用属性选择度量来选择将元组最好的划分为不同的类的属性，递归的通过选定的属性，来划分样本（必须是离散值） 树剪枝，决策树建立时，许多分枝反映的是训练数据中的噪声和离群点，树剪枝试图识别并减去这种分枝，以提高对未知数据分类的准确性 提取分类规则，从根到树叶的每条路径创建一个规则，并以“IF-THEN”形式的分类规则表示。示例： IF age=”youth” AND student=”no” THEN buys_computer=”no” 属性选择度量是一种选择分裂准则，将给定类标号的训练元组最好的进行划分的方法，常用的有：① 信息增益；② 增益率；③ Gini 指标。 贝叶斯分类思想：根据某些个先验概率计算Y变量属于某个类别的后验概率比较分类办法使用下列标准比较分类和预测方法 分类器的准确率度量（Accuracy）：模型正确预测新数据的类编号的能力 分类器的灵敏性（Sensitivity）度量和特效性（Specificity）度量 假设已经训练的分类器将医疗数据元组分类为“cancer”和“not_cancer”。90%的准确率使该分类器看上去相当准确，但是，如果只有 3%~4%的训练元组是“cancer”，显然90%的准确率是不可以接受的（比如该分类器只能对“not_cancer”类的元组正确分类，对 “cancer”类的元组全部分类错误）。我们希望有某种度量能够对分类器识别“cancer”元组（设为正元组）和“not_cancer”元组（设为负元组）进行分别评估，为此引入灵敏性（Sensitivity）度量和特效性（Specificity）度量。 速度：产生和使用模型的计算花销 健壮性：给定噪声数据或有空缺值的数据，模型正确预测的能力 可伸缩性：对大量数据，有效的构建分类器或预测器的能力 可解释性：学习模型提供的理解和洞察的层次 过度拟合（Overfit）问题 Overfit是这样一种现象：一个假设在训练数据上能够获得比其他假设更好的拟合，但是在训练数据外的数据集上却不能很好的拟合数据。此时我们就 叫这个假设出现了overfit的现象。 过度拟合产生的原因 噪声数据导致过度拟合由于数据中的噪声和孤立点，许多分枝反应的是训练数据中的异常。 缺乏代表性样本导致过度拟合在训练数据缺乏具有代表的样本的情况下，往往需要继续细化模型才能得到较好拟合训练集的模型，这样得到的模型同样可能具有较高的泛化误差。我们将训练好的模型检验训练集数据，得到的误差率称之为训练误差。将该模型用于检验测试样本，得到的误差率称之为泛化误差。 避免过度拟合的策略与上述两个导致模型过度拟合的因素同时出现的是模型的复杂度。模型越复杂出现过度拟合的概率就越高。因此，对于给定具有相同泛化误差的模型，我们往往更倾向于较为简单的模型，这就是所谓的Occam剃刀（Occam’s Razor）原则。为了避免过度拟合，降低决策树的复杂度，通常的策略是剪枝，该策略采用统计方法删除最不可靠的分支，以提高对未来分类识别的速度和分类 识别新数据的能力。 先剪枝（pre-pruning）法先剪枝法是通过提前停止分支的生长过程，即通过在当前结点上就判断是否需要继续划分该结点所包含训练样本集来实现的。这就需要更为限制性的约束条件，如当观察到衡量不纯性的度量低于某个阈值就停止分支的生长。该方法的优点在于避免产生过分拟合训练数据的过于复杂的子树。但是我们很难为提前终止选择正确的阈值，阈值太高将导致拟合不足，阈值太低则不能充分解决过度拟合问题。 后剪枝（post-pruning）法后剪枝法从一个“充分生长”的树中，按照自底向上的方式修剪多余的分支。对于树中的每个非树叶节点，计算该节点上的子树被剪枝可能出现的期望错误率。使用一个独立的测试集来评估每棵树的准确率，就能得到具有最小期望错误率的决策树。① 用新的叶子节点替换子树，该叶子节点的类标签由子树记录中的多数类确定；② 用子树中最常用的分支代替子树。 J48决策树算法采用了子树提升（Subtree Raising）与子树替换（Subtree Replacement）的修剪策略。计算修剪前后的预期分类错误率，如果修剪导致预期分类错误率变大，则放弃剪枝，保留该结点的相应分支，否则就将相应节点分支修剪删除。在产生一系列经过修剪的决策树候选之后，利用一个独立的测试数据集对这些经过修剪的决策树的分类的准确性进行评价，保留下那些预期分类错误率最小的决策树。与先剪枝相比，后剪枝倾向于产生更好的结果 检验和解释结果在实际问题中，数据往往有许多噪音，所以必须对统计结果进行显著性检验、准确性检验的基础上，对结果进行经验性的解释，已确定结果hi合乎逻辑、合乎情理、合乎直觉的，是能够解决实际问题的，而不是噪音、数据偏差（bias）或过拟合（overfit）的结果。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>%2F2017%2F02%2F15%2Fhello-world%2F</url>
      <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
    </entry>

    
  
  
</search>
