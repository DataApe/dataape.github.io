<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[Python 语法详解]]></title>
      <url>%2F2017%2F04%2F10%2FPython-%E8%AF%AD%E6%B3%95%E8%AF%A6%E8%A7%A3%2F</url>
      <content type="text"><![CDATA[123456789101112131415161718192021222324# Three ways to create strings'Alpha'"Bravo"str(3)# String methodslen("Charlie")"Delta".upper()"Echo".lower()# 高级输出方法g = "Golf"h = "Hotel"print "%s, %s" % (g, h)# String 变量置换 %string_1 = "Camelot"string_2 = "place"print "Let's not go to %s. 'Tis a silly %s." % (string_1, string_2)# 时间格式from datetime import datetimenow = datetime.now()print '%s/%s/%s %s:%s:%s' % (now.year, now.month, now.day,now.hour, now.minute, now.second)]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Python学习资源]]></title>
      <url>%2F2017%2F04%2F10%2FPython%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90%2F</url>
      <content type="text"><![CDATA[学习资源 笨办法学 Python 中文版 → http://www.kancloud.cn/wizardforcel/lpthw/92438 这本书绝对是最简单的学习 Python 的方法。你会被如此简单的基础学习感到震惊，你会真实地感受到自己的学习进程，一步步的获取新的知识。 Online Python Tutor：Python 初学者的好帮手 Online Python Tutor 是由 Philip Guo 开发的一个免费教育工具，可帮助学生攻克编程学习中的基础障碍，理解每一行源代码在程序执行时在计算机中的过程。 Learn Python Programming @ Codecademy 在这个 Codecademy 的课程中你将会学到如何用文件，如何使用循环。什么是函数以及他们能用来做什么。这些都是很基础的，但是对初学者很 有好的东西。当需要帮助时有一个交流的论坛，但通常所有东西都能被理解. 账号：2953354254@qq.com 用户名：Brucechan 简明 Python 教程 非常像 LPTHW，但是在如何制定你的完美学习计划并实施，以及如何开始第一步上 提供了更深的引导，而不会让你丧失自信心。对于那些想学 Python 的人来说它被认为是 最好的初学者教程之一，当然你要先看看前几章，看看自己是否喜欢它的写作风格. Think Python 中文版 → http://codingpy.com/books/thinkpython2/ Think Python 是一个面向 Python 初学者的一个指南。它从编程的基本概念教起，而且它很 仔细地定义了所有的术语当他们第一次用到时，并且很有逻辑性地展现新的概念。像递归和面向 对象这样大一点的知识块被分成了一系列更小的步骤，穿插于课程几个章节. 网站资源codingpy — 编程派 打造数据科学作品集1：用数据讲故事 打造数据科学作品集2：搭建一个数据科学博客 打造数据科学作品集3：从机器学习项目开始 打造数据科学作品集4：数据科学家如何找到心仪工作？ 博客资源Python 正则表达式操作指南]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Packages-R包汇总（更新中）]]></title>
      <url>%2F2017%2F04%2F06%2FPackages-R%E5%8C%85%E6%B1%87%E6%80%BB%2F</url>
      <content type="text"><![CDATA[加载/当前R包的清单12&gt; getOption(&quot;defaultPackages&quot;)&gt; (packages) 实现ggplot2的图形界面操作 RcmdrPlugin.KMggplot2包是Rcmdr包的一个插件。它通过集成ggplot2包可以实现Kamplan-Meier图，直方图，Q-Q 图，箱线图，误差条图，散点图，线图，饼图，条形图，等高线图，分布图等的“鼠标化”操作。 交互数据可视化rCharts包：该包直接在R中生成基于D3的Web界面。123&gt; install.packages(&quot;devtools&quot;)&gt; require(devtools)&gt; install_github(&apos;rCharts&apos;, &apos;ramnathv&apos;) 量化分析quantmod包12&gt; install.packages(&quot;quantmod&quot;)&gt; require(quantmod) 绘制中国地图12&gt; install.packages(&quot;maps&quot;)&gt; library(&quot;maps&quot;)]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[ggplot2的图形语法（待续）]]></title>
      <url>%2F2017%2F04%2F06%2Fggplot2%E7%9A%84%E5%9B%BE%E5%BD%A2%E8%AF%AD%E6%B3%95%2F</url>
      <content type="text"><![CDATA[安装包ggplot2的核心理念是将绘图与数据分离，数据相关的绘图与数据无关的绘图分离。按图层作图，图层(layer)之间是通过“+”来粘合构图的。想使用ggplot之前，需要先安装相应的包：（镜像选择china:beijing） 12install.packages(&quot;ggplot2&quot;) # 在R中安装ggplot2包library(ggplot2) # 载入ggplot2包 图形部件数据(data) 在ggplot2中, 所接受的数据集必须为数据框data.frame格式，这种格式带来的好处是数据易于存储, 也能在保留原有的绘图参数下, 用%+%方便地变更已有数据集。用mtcars.c替换mtcars12mtcars.c &lt;- transform(mtcars, mpg = mpg^2)p %+% mtcars.c 而ggplot2进行数据分组时必须根据行, 而不能根据列，变量不在是放在各个列上, 而是拍成一列, 每一个变量都分别占其中的几行, 这样就能方便的对每个变量进行分组。reshape2中的函数可以融合(melt)和重铸(cast)数据框中的数据。 12install.packages(&quot;reshape2&quot;) #在R中安装reshape2包library(reshape2) #载入reshape2包 映射(mapping) 映射是将一个变量中离散或连续的数据与一个图形属性中以不同的参数来相互关联, 而设定能够将这个变量中所有的数据统一为一个图形属性。 aes()函数是ggplot2中的映射函数 12p&lt;- ggplot(data= mtcars, mapping= aes(x= wt, y= hp))p+ geom_point(color= “blue”) #设定散点的颜色为蓝色 分组(group)也是ggplot2种映射关系的一种 1p &lt;-ggplot(data=mtcars, mapping=aes(x=wt, y=hp, group=factor(gear)))+geom_line() 图层(layer) ggplot2中的图层：每个图层可以代表一个图形组件, 例如下面要介绍的几何对象、统计变换等图形组件, 这些组件以图层的方式叠加在一起构成一个绘图的整体，在每个图层中的图形组件又可以分别设定数据、映射或其他相关参数, 因此组件之间又是具有相对独立性的。 几何对象(geom)统计变换(stat)统计变换即对数据进行统计变化, 通常以某种方式对数据信息进行汇总, 例如通过stat_smooth()添加光滑曲线。 标度(scale)标度控制着数据到图形属性的映射, 更重要的一点是标度将我们的数据转化为视觉上可以感知的东西, 如大小、颜色、位置和形状。所以通过标度可以修改坐标轴和图例的参数。 坐标系(coord)分面(facet)主题(theme)主题系统控制着图形中的非数据元素外观, 它不会影响几何对象和标度等数据元素。主题修改是一个对绘图精雕细琢的过程, 主要对标题、坐标轴标签、图例标签等文字调整, 以及网格线、背景、轴须的颜色搭配。 存储和输出(ggsave)ggplot2支持eps矢量图输出, 其他可以支持的格式包括png, jpg, pdf等, 并通过ggsave可以方便的进行修改。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[时间序列的分位数回归（待续）]]></title>
      <url>%2F2017%2F04%2F06%2F%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97%E7%9A%84%E5%88%86%E4%BD%8D%E6%95%B0%E5%9B%9E%E5%BD%92%2F</url>
      <content type="text"><![CDATA[复合分位数回归 估计回归系数的传统方法是最小二乘法，最小二乘法对于误差项的要求是非常严苛的，在实际问题中，数据往往会出现 尖峰厚尾 等特征，或者是存在明显的异方差情况，这时候若使用LS方法对回归系数进行估计，其稳健性是很差的。分位数回归有效的解决了上述问题，符合分位数回归是分位数回归的一种更一般性的推广。【尖峰厚尾】 金融数据的尖峰厚尾特征是相比较标准正态分布来说的，标准正态分布的偏度为0，峰度为3，通常做实证分析时，会假设金融数据为正态分布，这样方便建模分析，但是实证表明，很多数据并不符合正态分布，而更像尖峰厚尾，就是峰度比3大，两边的尾巴比正态分布厚，没有下降得这么快。厚尾分布主要是出现在金融数据中，例如证券的收益率。 从图形上说，较正态分布图的尾部要厚，峰处要尖。直观些说，就是这些数据出现极端值的概率要比正态分布数据出现极端值的概率大。因此，不能简单的用正态分布去拟合这些数据的分布，从而做一些统计推断。一般来说，通过实证分析发现，自由度为5或6的t分布拟合的较好。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[数据科学1.2 数据结构（待续）]]></title>
      <url>%2F2017%2F03%2F30%2F%E6%95%B0%E6%8D%AE%E7%A7%91%E5%AD%A61.2%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%2F</url>
      <content type="text"><![CDATA[绪论数据结构基本概念数据项：一个数据元素由若干数据项组成数据元素：组成数据对象的基本单位数据对象：性质相同的数据元素的集合（类似于数组一般） 数据结构：计算机存储、组织数据的方式。数据结构是指相互之间存在一种或多种特定关系的数据元素的集合。通常情况下，精心选择的数据结构可以带来更高的运行或者存储效率。数据结构往往同高效的检索算法和索引技术有关。数据结构例子 集合结构：数据元素之间除了同属于一个集合的关系 线性结构：数据元素之间存在着一对一的线性关系 树状结构：数据元素之间存在着一对多的层次关系 图状结构或网状结构：元素之间存在着多对多的任意关系]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hexo系列]]></title>
      <url>%2F2017%2F03%2F29%2FHexo%E7%B3%BB%E5%88%97%2F</url>
      <content type="text"><![CDATA[本文旨在帮助刚接触 Github 新手，想利用 Github 来创建自己的站点、个人博客等。使用 Hexo + Next 搭建静态博客 Hexo 安装完之后，主题的初始化格式非常简单。next主题的作者提供了一个非常好的方式，就是 custom 文件，这个文件就是用来让用户在里面添加自己的样式去覆盖主题原有的样式。推荐以下3篇个性化设置文章。 Hexo搭建博客的个性化设置一Hexo搭建博客的个性化设置二Hexo搭建博客的个性化设置三Hexo 3.1.1 静态博客搭建指南]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Python爬虫：Scrapy框架安装配置]]></title>
      <url>%2F2017%2F03%2F10%2FPython%E7%88%AC%E8%99%AB%E4%B9%8BScrapy%E6%A1%86%E6%9E%B6%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%2F</url>
      <content type="text"><![CDATA[本篇文章中Python的安装是基于window平台，安装Scrapy之前确保已经安装好下列程序: 安装Python 安装过程见→ python初级教程：入门详解 在命令行中输入 python –version，如果没有提示错误，则安装成功。 安装pywin32 在windows下，必须安装pywin32，安装地址： http://sourceforge.net/projects/pywin32/ http://www.softpedia.com/get/Programming/Other-Programming-Files/PyWin32.shtml#download 下载直接双击安装，安装完毕之后在python命令行下输入import win32com,如果没有提示错误，则证明安装成功! 安装pip pip是用来安装其他必要包的工具，首先下载get-pip.py 下载好之后，选中该文件夹所在路径，执行命令python get-pip.py 执行命令后便会安装好pip，同时，它帮你安装了setuptools 安装完了之后在命令行执行pip --version 安装完后若提醒版本低，可进行更新python -m pip install --update pip pip is already installed if you’re using Python 2 &gt;=2.7.9 or Python 3 &gt;=3.4 安装pyOPENSSL 在Windows下，是没有预装pyOPENSSL的，而在Linux下是已经安装好的。 安装地址：https://launchpad.net/pyopenssl (下载pyOpenSSL-0.11.winxp32-py2.7) 如果出现了Python Version 2.7 required which was not found in the registry错误！ 解决方法：新建一个register.py 文件，把以下代码贴进去，保存 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849# script to register Python 2.0 or later for use with win32all# and other extensions that require Python registry settings## written by Joakim Loew for Secret Labs AB / PythonWare## source:# http://www.pythonware.com/products/works/articles/regpy20.htm# import sys from _winreg import * # tweak as necessaryversion = sys.version[:3]installpath = sys.prefix regpath = "SOFTWARE\\Python\\Pythoncore\\%s\\" % (version)installkey = "InstallPath"pythonkey = "PythonPath"pythonpath = "%s;%s\\Lib\\;%s\\DLLs\\" % ( installpath, installpath, installpath) def RegisterPy(): try: reg = OpenKey(HKEY_CURRENT_USER, regpath) except EnvironmentError as e: try: reg = CreateKey(HKEY_CURRENT_USER, regpath) SetValue(reg, installkey, REG_SZ, installpath) SetValue(reg, pythonkey, REG_SZ, pythonpath) CloseKey(reg) except: print "*** Unable to register!" return print "--- Python", version, "is now registered!" return if (QueryValue(reg, installkey) == installpath and QueryValue(reg, pythonkey) == pythonpath): CloseKey(reg) print "=== Python", version, "is already registered!" return CloseKey(reg) print "*** Unable to register!" print "*** You probably have another Python installation!" if __name__ == "__main__": RegisterPy() 在cmd 中运行python脚本 双击安装 pyOpenSSL-0.11.winxp32-py2.7 安装 lxml第一种办法： lxml的详细介绍 link ，是一种使用 Python 编写的库，可以迅速、灵活地处理 XML 直接执行如下命令pip install lxml就可完成安装 如果提示 Microsoft Visual C++库没安装，则 link 下载支持的库。 可能报错： 第二种办法：步骤1：安装wheel，cmd命令行运行：pip install wheel步骤2：在这里http://www.lfd.uci.edu/~gohlke/pythonlibs/#lxml下载对应的.whl文件Ctrl + F，输入lxml，找到下面这段，cp后面是Python的版本号，27表示2.7。 lxml‑3.6.4‑cp27‑cp27m‑win32.whllxml‑3.6.4‑cp27‑cp27m‑win_amd64.whllxml‑3.6.4‑cp34‑cp34m‑win32.whllxml‑3.6.4‑cp34‑cp34m‑win_amd64.whllxml‑3.6.4‑cp35‑cp35m‑win32.whllxml‑3.6.4‑cp35‑cp35m‑win_amd64.whllxml‑3.6.4‑cp36‑cp36m‑win32.whllxml‑3.6.4‑cp36‑cp36m‑win_amd64.whl 步骤3：进入.whl所在的文件夹，执行命令pip install 带后缀的完整文件名即可完成安装pip安装报错：is not a supported wheel on this platform解决方法：在shell中输入import pip; print(pip.pep425tags.get_supported())可以获取到pip支持的文件名还有版本12345678import pip; print(pip.pep425tags.get_supported())[('cp27', 'none', 'win_amd64'), ('cp27', 'none', 'any'), ('cp2', 'none', 'any'), ('cp26', 'none', 'any'), ('cp25', 'none', 'any'), ('cp24', 'none', 'any'), ('cp23', 'none', 'any'), ('cp22', 'none', 'any'), ('cp21', 'none', 'any'), ('cp20', 'none', 'any'), ('py27', 'none', 'any'), ('py2', 'none', 'any'), ('py26', 'none', 'any'), ('py25', 'none', 'any'), ('py24', 'none', 'any'), ('py23', 'none', 'any'), ('py22', 'none', 'any'), ('py21', 'none', 'any'), ('py20', 'none', 'any')] 可以发现上面下载的文件名格式是不支持的，修改为：lxml-3.7.3-cp27-none-win_amd64.whl即可成功安装。 安装Scrapy 最后就是激动人心的时刻啦，上面的铺垫做好了，我们终于可以享受到胜利的果实啦！ 执行如下命令pip install Scrapy pip 会另外下载其他依赖的包，这些就不要我们手动安装啦，等待一会，大功告成！ 验证安装，输入 Scrapy 创建项目 scrapy startproject phone 发生问题： 问题原因：twist版本问题，twist版本高于需要的 输入pip freeze查看twist版本，用pip install twisted==13.1.0 替代更高的版本 Scrapy入门教程 Scrapy 1.0 中文文档 — 这是一本步骤详细的说明书。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Python安装]]></title>
      <url>%2F2017%2F03%2F09%2FPython%E5%AE%89%E8%A3%85%2F</url>
      <content type="text"><![CDATA[文章转载 → Python初级教程 , 文章篇幅太长，下文做了精简。 本文是针对Python的初学者，从无到有的介绍Python语言如何入门，主要包括了：Python的简介，如何下载Python，如何安装Python，如何使用终端、Shell，IDE等各种开发环境进行Python开发，Python中的语法和基本知识、概念和逻辑，以及继续深入学习Python的方法，另外还整理一些值得参考的资料。 安装Python1. Python官网不是太稳定，对于国内开发者来说，时不时会出现无法访问的情况。可以选择国内的镜像进行下载。 官网上的下载地址 国内的镜像 http://www.python.org/ftp/python/http://python.org/getit/releases/ http://mirrors.sohu.com/python/ 2. Python有2.x版本和3.x版本的区别。对于初学者，推荐先用Python 2.x版本的。 总结Python2(Python 2.x版本）和Python3（Python 3.x版本）之间的区别 如何在Windows系统中安装Python 开发环境 针对初学者，建议使用windows的cmd下，去运行python脚本。目的很明确：很多东西的学习，其本质上，都是需要一个循序渐进的过程的，学习Python语言同样如此。在没有学会走路，即如何搞懂Windows的cmd下运行Python脚本，就想学会跑了，即直接利用Python的IDE，包括shell和第三方开发环境，结果就是，很多东西，还是不明白到底是为什么，理解的不透彻。而当Python的基本知识，基本开发流程熟悉了之后，再建议你去使用第三方的Python的IDE。 先：Windows的cmd + Notepad++再：选用某个IDE，比如PyScripter，Ulipad，Eclipse+PyDev等。 使用问题在window的cmd中运行python结果却调用了文本编辑器去打开了，而不是去调用Python解析器去运行python文件 解决办法：修改后缀为.py文件的打开方式，设置为python]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[分类和预测]]></title>
      <url>%2F2017%2F03%2F03%2F%E5%88%86%E7%B1%BB%E5%92%8C%E9%A2%84%E6%B5%8B%2F</url>
      <content type="text"><![CDATA[分类：预测类对象的分类标号，根据训练数据集和类标号属性，构建模型来分类现有数据，并用来分类新数据。银行需要弄清楚那些贷款申请者是安全的，哪些是有风险的。预测：建立连续函数值模型，比如预测空缺值，或者预测顾客在某项活动中的花费。银行需要预测贷给某个顾客多少钱是安全的，预测一个连续值函数或有序值，常用方法是回归分析。 典型应用：欺诈检测 市场定位 医疗诊断 准备分类和预测的数据数据预处理数据清理通过填写空缺值，平滑噪声数据，识别删除孤立点，并解决不一致来清理数据。 空缺值 噪声数据(数据平滑技术) 1. 分箱 2. 聚类 3. 回归 - 忽略元组- 人工填写空缺值- 使用固定值- 使用属性平均值- 使用最有可能值 - 箱的深度：表示不同的箱里有相同个数的数据- 箱的宽度：每个箱值的取值区间是个常数- 平滑的办法：① 按箱平均值平滑② 按箱中值平滑③ 按箱边界值平滑 - 每个簇中的数据用其中心值代替- 忽略孤立点- 先通过聚类等办法找出孤立点。- 人工再审查这些孤立点 - 通过构造函数来符合数据变化的趋势，这样可以用一个变量预测另一个变量。① 线性回归② 多线性回归 数据清洗 格式标准化 异常数据清除 错误纠正 重复数据清除 数据变换 平滑 聚集 数据概化 规范化 属性构造 数据立方体聚集 最小 最大规范化 有给定的属性构造和添加新的属性，以帮助提高精度和对高纬度数据结构的理解 数据归约 数据聚集 维归约 数据压缩 数值归约 - 删除不相关属性属性子集选择 - 小波变换- 主要成分分析 - 回归和对数线性模型线性回归对数线性模型- 直方图等宽等深V-最优maxDiff 相关分析 在分类和回归之前进行，它试图识别与分类和回归过程显著相关的属性。 属性子集选择通过删除不相关或冗余的属性减少数据量。属性子集选择的目标是找出最小属性集，使得数据类的概率分布尽可能地接近使用所有属性得到的原分布。 向前选择 向后删除 决策树归纳 初始属性集：{A1，A2，A3，A4，A5，A6}初始化归约集：{ }=&gt; {A1}=&gt; {A1，A4}=&gt; 归约后的属性集：{A1，A4，A6} 初始属性集：{A1，A2，A3，A4，A5，A6}=&gt; {A1，A3，A4，A5，A6} =&gt; {A1，A4，A5，A6}=&gt; 归约后的属性集：{A1，A4，A6} 初始属性集：{A1，A2，A3，A4，A5，A6}当决策树归纳用于属性子集选择时，由给定的数据构造决策树。不出现在树中的所有属性假定是不相关的。出现在树中的属性形成归约后的属性子集。 这些方法的结束条件可以不同。该过程可以使用一个度量阈值来决定何时停止属性选择过程。 分类办法决策树 决策树构建，使用属性选择度量来选择将元组最好的划分为不同的类的属性，递归的通过选定的属性，来划分样本（必须是离散值） 树剪枝，决策树建立时，许多分枝反映的是训练数据中的噪声和离群点，树剪枝试图识别并减去这种分枝，以提高对未知数据分类的准确性 提取分类规则，从根到树叶的每条路径创建一个规则，并以“IF-THEN”形式的分类规则表示。示例： IF age=”youth” AND student=”no” THEN buys_computer=”no” 属性选择度量是一种选择分裂准则，将给定类标号的训练元组最好的进行划分的方法，常用的有：① 信息增益；② 增益率；③ Gini 指标。 贝叶斯分类思想：根据某些个先验概率计算Y变量属于某个类别的后验概率比较分类办法使用下列标准比较分类和预测方法 分类器的准确率度量（Accuracy）：模型正确预测新数据的类编号的能力 分类器的灵敏性（Sensitivity）度量和特效性（Specificity）度量 假设已经训练的分类器将医疗数据元组分类为“cancer”和“not_cancer”。90%的准确率使该分类器看上去相当准确，但是，如果只有 3%~4%的训练元组是“cancer”，显然90%的准确率是不可以接受的（比如该分类器只能对“not_cancer”类的元组正确分类，对 “cancer”类的元组全部分类错误）。我们希望有某种度量能够对分类器识别“cancer”元组（设为正元组）和“not_cancer”元组（设为负元组）进行分别评估，为此引入灵敏性（Sensitivity）度量和特效性（Specificity）度量。 速度：产生和使用模型的计算花销 健壮性：给定噪声数据或有空缺值的数据，模型正确预测的能力 可伸缩性：对大量数据，有效的构建分类器或预测器的能力 可解释性：学习模型提供的理解和洞察的层次 过度拟合（Overfit）问题 Overfit是这样一种现象：一个假设在训练数据上能够获得比其他假设更好的拟合，但是在训练数据外的数据集上却不能很好的拟合数据。此时我们就 叫这个假设出现了overfit的现象。 过度拟合产生的原因 噪声数据导致过度拟合由于数据中的噪声和孤立点，许多分枝反应的是训练数据中的异常。 缺乏代表性样本导致过度拟合在训练数据缺乏具有代表的样本的情况下，往往需要继续细化模型才能得到较好拟合训练集的模型，这样得到的模型同样可能具有较高的泛化误差。我们将训练好的模型检验训练集数据，得到的误差率称之为训练误差。将该模型用于检验测试样本，得到的误差率称之为泛化误差。 避免过度拟合的策略与上述两个导致模型过度拟合的因素同时出现的是模型的复杂度。模型越复杂出现过度拟合的概率就越高。因此，对于给定具有相同泛化误差的模型，我们往往更倾向于较为简单的模型，这就是所谓的Occam剃刀（Occam’s Razor）原则。为了避免过度拟合，降低决策树的复杂度，通常的策略是剪枝，该策略采用统计方法删除最不可靠的分支，以提高对未来分类识别的速度和分类 识别新数据的能力。 先剪枝（pre-pruning）法先剪枝法是通过提前停止分支的生长过程，即通过在当前结点上就判断是否需要继续划分该结点所包含训练样本集来实现的。这就需要更为限制性的约束条件，如当观察到衡量不纯性的度量低于某个阈值就停止分支的生长。该方法的优点在于避免产生过分拟合训练数据的过于复杂的子树。但是我们很难为提前终止选择正确的阈值，阈值太高将导致拟合不足，阈值太低则不能充分解决过度拟合问题。 后剪枝（post-pruning）法后剪枝法从一个“充分生长”的树中，按照自底向上的方式修剪多余的分支。对于树中的每个非树叶节点，计算该节点上的子树被剪枝可能出现的期望错误率。使用一个独立的测试集来评估每棵树的准确率，就能得到具有最小期望错误率的决策树。① 用新的叶子节点替换子树，该叶子节点的类标签由子树记录中的多数类确定；② 用子树中最常用的分支代替子树。 J48决策树算法采用了子树提升（Subtree Raising）与子树替换（Subtree Replacement）的修剪策略。计算修剪前后的预期分类错误率，如果修剪导致预期分类错误率变大，则放弃剪枝，保留该结点的相应分支，否则就将相应节点分支修剪删除。在产生一系列经过修剪的决策树候选之后，利用一个独立的测试数据集对这些经过修剪的决策树的分类的准确性进行评价，保留下那些预期分类错误率最小的决策树。与先剪枝相比，后剪枝倾向于产生更好的结果 检验和解释结果在实际问题中，数据往往有许多噪音，所以必须对统计结果进行显著性检验、准确性检验的基础上，对结果进行经验性的解释，已确定结果hi合乎逻辑、合乎情理、合乎直觉的，是能够解决实际问题的，而不是噪音、数据偏差（bias）或过拟合（overfit）的结果。]]></content>
    </entry>

    
  
  
</search>
